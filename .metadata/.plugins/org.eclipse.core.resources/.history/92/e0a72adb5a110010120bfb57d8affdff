package com.example.demo.repository;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Repository;
import org.springframework.jdbc.core.PreparedStatementSetter;
import com.example.demo.model.OwnerModel;

@Repository("empRepo")
public class OwnerRepository {
	List<OwnerModel> list;
    @Autowired
    private JdbcTemplate jdbcTemplate;
    
    public boolean isAddNewEmployee(OwnerModel emp) {
        int rowsAffected = jdbcTemplate.update(
            "INSERT INTO Employee (name, email,password,phone) VALUES (?, ?, ?, ?)", 
            new PreparedStatementSetter() {
                @Override
                public void setValues(java.sql.PreparedStatement ps) throws java.sql.SQLException {
                	 ps.setString(1, emp.getName());
                     ps.setString(2, emp.getEmail());
                     ps.setString(3, emp.getPassword());
                     ps.setString(4, emp.getPassword());
                }
            }
        );
        return rowsAffected > 0;
    }
    public List<Employee> getAllEmployee(){
    	list = jdbcTemplate.query("select * from employee",new RowMapper<Employee>() {

			@Override
			public Employee mapRow(ResultSet rs, int rowNum) throws SQLException {
				Employee emp = new Employee();
				emp.setEmpid(rs.getInt(1));
				emp.setName(rs.getString(2));
				emp.setSalary(rs.getInt(3));
				emp.setCity(rs.getString(4));
				return  emp;
			}
    		
    	});
    	return list;
    }
    public Employee searchById(int id){
    	
    	list = jdbcTemplate.query("select * from employee where empid=?",new Object[] {id},new RowMapper<Employee>() {

			@Override
			public Employee mapRow(ResultSet rs, int rowNum) throws SQLException {
				Employee emp = new Employee();
				emp.setEmpid(rs.getInt(1));
				emp.setName(rs.getString(2));
				emp.setSalary(rs.getInt(3));
				emp.setCity(rs.getString(4));
				return  emp;
			}
    		
    	});
    	return list.size()>0 ? list.get(0):null;
    }
    
    public boolean deleteById (int id) {
    	int value =  jdbcTemplate.update("delete from employee where empid="+id);
    	return value>0?true:false;
    }
}

