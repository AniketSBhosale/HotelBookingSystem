package com.example.demo.controller;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.OwnerModel;
import com.example.demo.services.OwnerService;

@RestController
@RequestMapping("/api")
public class OwnerController {

    private final OwnerService ownerServices;

    @Autowired
    public OwnerController(OwnerService ownerServices) {
        this.ownerServices = ownerServices;
    }

    // 1. Search by ID
    @GetMapping("/search/{ownerId}")
    public ResponseEntity<OwnerModel> getOwnerById(@PathVariable int ownerId) {
        OwnerModel owner = ownerServices.getOwnerById(ownerId);
        if (owner != null) {
            return ResponseEntity.ok(owner);
        } else {
            return ResponseEntity.status(404).body(null);  // Owner not found
        }
    }

    // 2. Search by Name
    @GetMapping("/searchByName/{name}")
    public ResponseEntity<List<OwnerModel>> getOwnerByName(@PathVariable String name) {
        List<OwnerModel> owners = ownerServices.getOwnerByName(name);
        if (owners.isEmpty()) {
            return ResponseEntity.status(404).body(null);  // No owner found
        } else {
            return ResponseEntity.ok(owners);
        }
    }

    // 3. Delete by ID
    @DeleteMapping("/delete/{ownerId}")
    public ResponseEntity<String> deleteOwnerById(@PathVariable int ownerId) {
        boolean deleted = ownerServices.deleteOwnerById(ownerId);
        if (deleted) {
            return ResponseEntity.ok("Owner deleted successfully");
        } else {
            return ResponseEntity.status(400).body("Failed to delete owner");
        }
    }

    // 4. Delete by Name
    @DeleteMapping("/deleteByName/{name}")
    public ResponseEntity<String> deleteOwnerByName(@PathVariable String name) {
        boolean deleted = ownerServices.deleteOwnerByName(name);
        if (deleted) {
            return ResponseEntity.ok("Owner deleted successfully");
        } else {
            return ResponseEntity.status(400).body("Failed to delete owner");
        }
    }
}
